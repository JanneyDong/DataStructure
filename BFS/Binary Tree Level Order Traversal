import collections
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if root == None:
            return []
        queue = collections.deque()
        queue.appendleft(root)
        res = []
        while len(queue) != 0:
            res.append([e.val for e in reversed(queue)])
            num_of_nodes = len(queue)
            for i in range(num_of_nodes):
                node = queue.pop()
                for child in [node.left, node.right]:
                    if child:
                        queue.appendleft(child)
        return res
            
